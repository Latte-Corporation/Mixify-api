apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mixify-api.fullname" . }}
  labels:
    {{- include "mixify-api.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mixify-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mixify-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['npx']
          args: ['prisma', 'migrate', 'deploy']
          env:
            {{- if .Values.database.existingSecret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: DATABASE_URL
            - name: DATABASE_DIRECT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: DATABASE_DIRECT_URL
            {{- else }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            - name: DATABASE_DIRECT_URL
              value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.spotify.existingSecret }}
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.spotify.existingSecret }}
                  key: CLIENT_ID
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.spotify.existingSecret }}
                  key: CLIENT_SECRET
            {{- else }}
            - name: CLIENT_ID
              value: "{{ .Values.spotify.CLIENT_ID }}"
            - name: CLIENT_SECRET
              value: "{{ .Values.spotify.CLIENT_SECRET }}"
            {{- end }}
            {{- if .Values.database.existingSecret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: DATABASE_URL
            - name: DATABASE_DIRECT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: DATABASE_DIRECT_URL
            {{- else }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            - name: DATABASE_DIRECT_URL
              value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
